<Window x:Class="FigLeaf.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:UI="clr-namespace:FigLeaf.UI"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:Core="clr-namespace:FigLeaf.Core;assembly=FigLeaf.Core" 
        xmlns:CoreProperties="clr-namespace:FigLeaf.Core.Properties;assembly=FigLeaf.Core" 
        Title="Fig Leaf" Height="550" Width="800" Icon="FigLeaf.ico" Closing="WindowClosing" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <UI:OppositeBooleanValueConverter x:Key="OppositeBooleanValueConverter" />
        <UI:OppositeBooleanToVisibilityConverter x:Key="OppositeBooleanToVisibilityConverter" />
        <SolidColorBrush x:Key="BorderBrush" Color="#7CA512"/>

        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=BorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>
                            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                            <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4">
                                <Border.OpacityMask>
                                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                        <Binding ElementName="Header" Path="ActualWidth" />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Border.OpacityMask>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton">
            <Setter Property="IsChecked" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}" Value="{x:Static CoreProperties:Resources.Common_Culture}">
                    <Setter Property="IsChecked" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
    </Window.Resources>

    <DockPanel LastChildFill="True" Name="LayoutRoot">
        <DockPanel.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#447CA512" Offset="0"/>
                <GradientStop Color="#117CA512" Offset="0.567"/>
            </LinearGradientBrush>
        </DockPanel.Background>

        <StackPanel Width="100" Visibility="Visible">
            <Image Source="Img/Leaf80.png" Margin="10" VerticalAlignment="Top" DockPanel.Dock="Top"/>
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="5">
                <ToggleButton Click="SwitchLanguage" Tag="en-US" Background="Transparent" BorderBrush="{StaticResource ResourceKey=BorderBrush}" ToolTip="English">
                    <Image Source="Img/en.png" Width="32"/>
                </ToggleButton>
                <ToggleButton Click="SwitchLanguage" Tag="ru-RU" Background="Transparent" BorderBrush="{StaticResource ResourceKey=BorderBrush}" ToolTip="Русский">
                    <Image Source="Img/ru.png" Width="32"/>
                </ToggleButton>
            </StackPanel>
        </StackPanel>

        <DockPanel LastChildFill="True">

            <GroupBox Header="{x:Static CoreProperties:Resources.Ui_Folders_Header}" DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="25"/>
                        <RowDefinition MinHeight="25"/>
                        <RowDefinition MinHeight="25"/>
                        <RowDefinition MinHeight="25"/>
                    </Grid.RowDefinitions>

                    <Button Content="{x:Static CoreProperties:Resources.Ui_Folders_Add}" HorizontalAlignment="Stretch" Height="24" Click="AddDir" Margin="0,0,9,0" 
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <CheckBox IsChecked="{Binding Path=Settings.HasMultipleDirs, Mode=TwoWay}" Content="{x:Static CoreProperties:Resources.Ui_Folders_HasMultiple}" 
                        VerticalAlignment="Center"  HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Name="chbMultipleFolders"/>

                    <Label Content="{x:Static CoreProperties:Resources.Ui_Folders_Source}" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource OppositeBooleanToVisibilityConverter}}"/>
                    <UI:FolderPicker Text="{Binding Path=Settings.Dirs[0].Source, Mode=TwoWay}" Grid.Column="1" Grid.Row="1"
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource OppositeBooleanToVisibilityConverter}}"/>

                    <Label Content="{x:Static CoreProperties:Resources.Ui_Folders_Target}" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="2"
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource OppositeBooleanToVisibilityConverter}}"/>
                    <UI:FolderPicker Text="{Binding Path=Settings.Dirs[0].Target, Mode=TwoWay}"  Grid.Column="1" Grid.Row="2"
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource OppositeBooleanToVisibilityConverter}}"/>

                    <CheckBox IsChecked="{Binding Path=Settings.ExcludeFigLeafDir, Mode=TwoWay}" Content="{x:Static CoreProperties:Resources.Ui_Folders_ExcludeFigLeafDir}" 
                        VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="3"
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource OppositeBooleanToVisibilityConverter}}"/>

                    <DataGrid Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="2" Name="grDirs"
                        Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource BooleanToVisibilityConverter}}"
                        ItemsSource="{Binding Settings.Dirs}" AutoGenerateColumns="False" RowHeight="26" BorderBrush="{StaticResource ResourceKey=BorderBrush}"
                        VerticalGridLinesBrush="{StaticResource ResourceKey=BorderBrush}" HorizontalGridLinesBrush="{StaticResource ResourceKey=BorderBrush}"
                        RowHeaderWidth="0" MaxHeight="155">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*" Header="{x:Static CoreProperties:Resources.Ui_Folders_Source}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <UI:FolderPicker Text="{Binding Source, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="*" Header="{x:Static CoreProperties:Resources.Ui_Folders_Target}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <UI:FolderPicker Text="{Binding Target, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="20" Header="х">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="x" Click="DelDir"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="130" Header="{x:Static CoreProperties:Resources.Ui_Folders_RestoreHeader}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="{x:Static CoreProperties:Resources.Ui_Actions_RestoreTargetTo}" Click="RestoreTarget" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </GroupBox>

            <GroupBox Header="{x:Static CoreProperties:Resources.Ui_Security_Header}" DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions >
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Content="{x:Static CoreProperties:Resources.Ui_Security_MasterPassword}" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="0"/>
                    <PasswordBox 
                        UI:PasswordHelper.Attach="True"
                        UI:PasswordHelper.Password="{Binding Text, ElementName=txtPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                        Grid.Column="1" Grid.Row="0" Panel.ZIndex="1" />
                    <TextBox x:Name="txtPassword" Text="{Binding Path=Settings.MasterPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                        Visibility="{Binding IsChecked, ElementName=btnShowPassword, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Grid.Column="1" Grid.Row="0" Panel.ZIndex="2" />
                    <ToggleButton x:Name="btnShowPassword" Content="ABC" ToolTip="{x:Static CoreProperties:Resources.Ui_Security_ShowPassword}" 
                         HorizontalContentAlignment="Center" HorizontalAlignment="Right" 
                         FontSize="8" Width="25" Grid.Column="1" Grid.Row="0" Panel.ZIndex="3" />

                    <Label Content="{x:Static CoreProperties:Resources.Ui_Security_PasswordRule}" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                    <ComboBox
                        SelectedValue="{Binding Path=Settings.PasswordRule, Mode=TwoWay}"
                        SelectedValuePath="Value"
                        ItemsSource="{Binding Source={UI:Enumeration {x:Type Core:PasswordRule}}}"
                        DisplayMemberPath="Description" 
                        HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                        Grid.Column="1" Grid.Row="1">
                    </ComboBox>
                </Grid>
            </GroupBox>

            <GroupBox Header="{x:Static CoreProperties:Resources.Ui_Thumbnails_Header}" DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions >
                        <RowDefinition MinHeight="25"/>
                        <RowDefinition MinHeight="25"/>
                    </Grid.RowDefinitions>

                    <CheckBox IsChecked="{Binding Path=Settings.EnableThumbnails, Mode=TwoWay}" Content="{x:Static CoreProperties:Resources.Ui_Thumbnails_Enable}" 
                        VerticalAlignment="Center"  HorizontalAlignment="Left" Grid.Column="1" Grid.Row="0" Name="chbEnableThumbs"/>

                    <Label Content="{x:Static CoreProperties:Resources.Ui_Thumbnails_Size}" HorizontalAlignment="Right" Grid.Column="0" Grid.Row="1"/>
                    <xctk:IntegerUpDown 
                        Value="{Binding Path=Settings.ThumbnailSize, Mode=TwoWay}"
                        HorizontalAlignment="Left" Width="50" Grid.Column="1" Grid.Row="1" VerticalContentAlignment="Center" Minimum="16" Maximum="256"/>
                </Grid>
            </GroupBox>

            <GroupBox Header="{x:Static CoreProperties:Resources.Ui_Actions_Header}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions >
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0"  Margin="0,9,9,0">
                        <Button Content="{x:Static CoreProperties:Resources.Ui_Actions_UpdateTarget}" HorizontalAlignment="Stretch" Height="24" Click="UpdateTarget"/>
                        <Button Content="{x:Static CoreProperties:Resources.Ui_Actions_RestoreTargetTo}" HorizontalAlignment="Stretch" Height="24" Click="RestoreTarget"
                            Visibility="{Binding IsChecked, ElementName=chbMultipleFolders, Converter={StaticResource OppositeBooleanToVisibilityConverter}}"/>
                        <UI:CancelButton Content="{x:Static CoreProperties:Resources.Ui_Actions_Cancel}" HorizontalAlignment="Stretch" Height="24" Click="CancelAction" 
                            IsEnabled="{Binding ElementName=LayoutRoot, Path=IsEnabled, Converter={StaticResource OppositeBooleanValueConverter}}"/>
                    </StackPanel>

                    <GroupBox Grid.Column="1" Margin="-5,0">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                <TextBlock Text="{x:Static CoreProperties:Resources.Ui_Actions_Log}" Margin="0,0,5,0"/>
                                <CheckBox IsChecked="{Binding Path=Settings.DetailedLogging, Mode=TwoWay}" Content="{x:Static CoreProperties:Resources.Ui_Actions_DetailedLogging}" VerticalAlignment="Center" />
                            </StackPanel>
                        </GroupBox.Header>

                        <TextBox AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto" IsReadOnly="True" Name="txtLog"/>
                    </GroupBox>
                </Grid>
            </GroupBox>
        </DockPanel>
    </DockPanel>
</Window>
